{"ast":null,"code":"import _defineProperty from\"C:/Users/dell/Documents/GitHub/test/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/dell/Documents/GitHub/test/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/dell/Documents/GitHub/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/dell/Documents/GitHub/test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\dell\\\\Documents\\\\GitHub\\\\test\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import{doc,getDoc,setDoc}from\"firebase/firestore\";import{db,auth}from\"./firebase\";import Modal from\"./Modal/modal\";import styles from\"../components/games/games.module.css\";import Lottie from'react-lottie';import lost from\"./games/lost.json\";import win from\"./games/win.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function WriteExam(_ref){var _questions$selectedQu,_questions$selectedQu2;var onObtainedMarks=_ref.onObtainedMarks,onModalVisibilityChange=_ref.onModalVisibilityChange,gameScore=_ref.gameScore,perQue=_ref.perQue;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),examData=_useState2[0],setExamData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),questions=_useState4[0],setQuestions=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),selectedQuestionIndex=_useState6[0],setSelectedQuestionIndex=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),selectedOptions=_useState8[0],setSelectedOptions=_useState8[1];var _useState9=useState({}),_useState10=_slicedToArray(_useState9,2),result=_useState10[0],setResult=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),viewSet=_useState12[0],setViewSet=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showModal=_useState14[0],setShowModal=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),questionTimerId=_useState16[0],setQuestionTimerId=_useState16[1];var _useState17=useState(5),_useState18=_slicedToArray(_useState17,2),internalTimer=_useState18[0],setInternalTimer=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),user=_useState20[0],setUser=_useState20[1];var _useState21=useState(0),_useState22=_slicedToArray(_useState21,2),attemptedQuestions=_useState22[0],setAttemptedQuestions=_useState22[1];var _useState23=useState(0),_useState24=_slicedToArray(_useState23,2),incorrectAnswers=_useState24[0],setIncorrectAnswers=_useState24[1];useEffect(function(){auth.onAuthStateChanged(function(user){setUser(user);});},[]);var game=window.location.href.split('/').pop();useEffect(function(){var getExamData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var quizRef,quizSnapshot,quizData,questionIds,questionPromises,fetchedQuestions;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;quizRef=doc(db,\"Quizzes\",game);_context2.next=4;return getDoc(quizRef);case 4:quizSnapshot=_context2.sent;if(!quizSnapshot.exists()){_context2.next=16;break;}quizData=quizSnapshot.data();setExamData(quizData);console.log(quizData);questionIds=quizData.question;questionPromises=questionIds.map(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(questionId){var questionRef,questionSnapshot;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:questionRef=doc(db,\"Questions\",questionId);_context.next=3;return getDoc(questionRef);case 3:questionSnapshot=_context.sent;return _context.abrupt(\"return\",_objectSpread(_objectSpread({},questionSnapshot.data()),{},{id:questionSnapshot.id}));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref3.apply(this,arguments);};}());_context2.next=13;return Promise.all(questionPromises);case 13:fetchedQuestions=_context2.sent;console.log(fetchedQuestions);setQuestions(fetchedQuestions);case 16:_context2.next=21;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](0);console.error(\"Error fetching exam data:\",_context2.t0);case 21:case\"end\":return _context2.stop();}}},_callee2,null,[[0,18]]);}));return function getExamData(){return _ref2.apply(this,arguments);};}();getExamData();},[]);var calculateResult=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var correctAnswers,wrongAnswers,perQueMarks,obtainedMarks,obtainedPercent,verdict,tempResult,correctAnswerIds,wrongAnswerIds,gameScoreRef,gameScoreSnapshot,scoresToUpdate,allGames;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:correctAnswers=[];wrongAnswers=[];questions.forEach(function(question,index){if(question.correctOption.toString()===selectedOptions[index]){correctAnswers.push(question);}else{wrongAnswers.push(question);}});perQueMarks=1;obtainedMarks=correctAnswers.length*perQueMarks;obtainedPercent=obtainedMarks/questions.length*100;verdict=\"Pass\";if(obtainedMarks<=0){verdict=\"Fail\";}if(obtainedMarks===questions.length&&obtainedMarks!==0){verdict=\"Won\";}tempResult={correctAnswers:correctAnswers,wrongAnswers:wrongAnswers,obtainedMarks:obtainedMarks,obtainedPercent:obtainedPercent,verdict:verdict,attemptedQuestions:attemptedQuestions};if(onObtainedMarks){onObtainedMarks(obtainedMarks);}if(!user){_context3.next=32;break;}correctAnswerIds=correctAnswers.map(function(q){return q.id;});wrongAnswerIds=wrongAnswers.map(function(q){return q.id;});gameScoreRef=doc(db,\"GameReports\",user.uid);_context3.next=17;return getDoc(gameScoreRef);case 17:gameScoreSnapshot=_context3.sent;scoresToUpdate={};if(gameScoreSnapshot.exists()){scoresToUpdate=gameScoreSnapshot.data().scores||{};}else{// Initialize scores for all games to 0 if the document doesn't exist\nallGames=[\"2048-game\",\"bricks-mania\",\"slidding-puzzle\",\"tic-tac-toe\"];allGames.forEach(function(game){scoresToUpdate[game]=0;});}// Update the score only if it's greater than the existing score\nif(gameScore>scoresToUpdate[game]){scoresToUpdate[game]=gameScore;}_context3.prev=21;_context3.next=24;return setDoc(gameScoreRef,{user:user.uid,scores:_objectSpread({},scoresToUpdate)},{merge:true});case 24:console.log(\"Report saved successfully\");_context3.next=30;break;case 27:_context3.prev=27;_context3.t0=_context3[\"catch\"](21);console.error(\"Error saving report: \",_context3.t0);case 30:_context3.next=33;break;case 32:console.error(\"No user signed in or quiz ID missing\");case 33:setResult(tempResult);setViewSet(\"result\");setShowModal(true);case 36:case\"end\":return _context3.stop();}}},_callee3,null,[[21,27]]);}));return function calculateResult(){return _ref4.apply(this,arguments);};}();useEffect(function(){if(viewSet!==\"result\"&&viewSet!==\"review\"){var initialDelay=setTimeout(function(){setShowModal(true);if(onModalVisibilityChange){onModalVisibilityChange(true);}setSelectedQuestionIndex(0);var timerId=setInterval(function(){setSelectedQuestionIndex(function(prevIndex){var nextIndex=prevIndex+1;if(nextIndex<questions.length){setShowModal(true);if(onModalVisibilityChange){onModalVisibilityChange(true);}return nextIndex;}else{clearInterval(timerId);return prevIndex;}});},15000);setQuestionTimerId(timerId);},10000);return function(){clearTimeout(initialDelay);clearInterval(questionTimerId);};}},[viewSet,questions.length]);useEffect(function(){if(showModal&&internalTimer>0&&viewSet!==\"result\"&&viewSet!==\"result\"){var timer=setTimeout(function(){setInternalTimer(function(prev){return prev-1;});},1000);return function(){return clearTimeout(timer);};}else if(internalTimer===0){setShowModal(false);if(onModalVisibilityChange){onModalVisibilityChange(false);}setInternalTimer(5);}},[showModal,internalTimer]);var handleAnswerSelection=function handleAnswerSelection(option){var isCorrect=questions[selectedQuestionIndex].correctOption.toString()===option;setSelectedOptions(_objectSpread(_objectSpread({},selectedOptions),{},_defineProperty({},selectedQuestionIndex,option)));if(!isCorrect){setIncorrectAnswers(function(prev){return prev+1;});}setAttemptedQuestions(Object.keys(selectedOptions).length+1);setShowModal(false);if(onModalVisibilityChange){onModalVisibilityChange(false);}setInternalTimer(5);if(!isCorrect&&incorrectAnswers+1>=2){handleEndGame();}};var handleEndGame=function handleEndGame(){if(onModalVisibilityChange){onModalVisibilityChange(true);}clearInterval(questionTimerId);calculateResult();setViewSet(\"result\");setTimeout(function(){setShowModal(false);window.location.href=\"/#/home\";},15000);};var resetGame=function resetGame(){window.location.href=window.location.href;};var totalMarks=attemptedQuestions*perQue;var defaultLostOptions={loop:true,autoplay:true,animationData:lost,rendererSettings:{preserveAspectRatio:'xMidYMid slice'}};var defaultWinOptions={loop:true,autoplay:true,animationData:win,rendererSettings:{preserveAspectRatio:'xMidYMid slice'}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:styles.gameButton,style:{display:\"flex\"},onClick:handleEndGame,children:\"End Game\"}),/*#__PURE__*/_jsx(Modal,{isOpen:showModal,onClose:function onClose(){if(viewSet===\"result\"){window.location.href=\"./home\";}setShowModal(false);if(onModalVisibilityChange){onModalVisibilityChange(false);}},header:viewSet===\"result\"?\"Result\":viewSet===\"review\"?\"Review\":\"Question\",size:\"xlarge\",children:viewSet===\"result\"?/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",margin:\"3vh 1vw\"},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Total Questions: \",questions.length]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Attempted Questions: \",attemptedQuestions]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Correct Answers: \",result.obtainedMarks]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Game Score: \",gameScore]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",gap:\"2vw\",justifyContent:'center'},children:[/*#__PURE__*/_jsx(\"button\",{className:styles.gameButton,onClick:resetGame,children:\"Retake Exam\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.gameButton,onClick:function onClick(){window.location.href=\"./home\";},children:\"End Game\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[result.verdict===\"Won\"&&/*#__PURE__*/_jsx(Lottie,{options:defaultWinOptions,height:300,width:300}),result.verdict===\"Fail\"&&/*#__PURE__*/_jsx(Lottie,{options:defaultLostOptions,height:300,width:300})]})]}):// viewSet === \"review\" ? (\n//   <div>\n//     <div style={{ display: \"grid\", gap: \"2vh\", maxHeight: \"50vh\", overflow: \"auto\", msOverflowStyle: \"none\", scrollbarWidth: \"none\" }}>\n//       {questions.map((question, index) => {\n//         const isCorrect = question.correctOption.toString() === selectedOptions[index];\n//         return (\n//           <div key={index}>\n//             <h1>{index + 1}: {question.name}</h1>\n//             <h1>Submitted Answer: {selectedOptions[index]}</h1>\n//             <h1>Correct Answer: {question.correctOption}</h1>\n//           </div>\n//         );\n//       })}\n//     </div>\n//     <div style={{ display: \"flex\", placeContent: \"center\", gap: \"2vw\" }}>\n//       <button className={styles.gameButton} onClick={resetGame}>Retake Exam</button>\n//       <button className={styles.gameButton} onClick={() => { setShowModal(false); if (onModalVisibilityChange){onModalVisibilityChange(false);} }}>Resume Game</button>\n//     </div>\n//   </div>\n// ) : \nquestions[selectedQuestionIndex]&&/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",textAlign:\"start\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",height:\"min-content\"},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{margin:\"0vh 3vw\"},children:[selectedQuestionIndex+1,\": \",(_questions$selectedQu=questions[selectedQuestionIndex])===null||_questions$selectedQu===void 0?void 0:_questions$selectedQu.name]}),/*#__PURE__*/_jsx(\"h4\",{style:{backgroundColor:\"#FFC340\",borderRadius:\"50%\",width:\"2.5vw\",height:\"2.5vw\",textAlign:\"center\",padding:\"0.5vh\",marginRight:\"2vw\"},children:internalTimer})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\",gap:\"2vh\"},children:Object.keys((_questions$selectedQu2=questions[selectedQuestionIndex])===null||_questions$selectedQu2===void 0?void 0:_questions$selectedQu2.options).sort().map(function(option){var _questions$selectedQu3;return/*#__PURE__*/_jsx(\"div\",{style:{border:\"3px solid #ac7474\",borderRadius:\"40px\",margin:\"0vh 2vw\",backgroundColor:selectedOptions[selectedQuestionIndex]===option?\"#BE60D0\":\"transparent\"},onClick:function onClick(){return handleAnswerSelection(option);},children:/*#__PURE__*/_jsxs(\"h4\",{style:{margin:\"2vh 2vw\"},children:[option,\": \",(_questions$selectedQu3=questions[selectedQuestionIndex])===null||_questions$selectedQu3===void 0?void 0:_questions$selectedQu3.options[option]]})},option);})}),/*#__PURE__*/_jsx(\"button\",{style:{placeSelf:\"end\",margin:\"1vh 2vw 0vh 2vw\"},className:styles.gameButton,onClick:handleEndGame,children:\"End Game\"})]})})]});}export default WriteExam;","map":{"version":3,"sources":["C:/Users/dell/Documents/GitHub/test/src/components/Quiz.js"],"names":["React","useEffect","useState","doc","getDoc","setDoc","db","auth","Modal","styles","Lottie","lost","win","WriteExam","onObtainedMarks","onModalVisibilityChange","gameScore","perQue","examData","setExamData","questions","setQuestions","selectedQuestionIndex","setSelectedQuestionIndex","selectedOptions","setSelectedOptions","result","setResult","viewSet","setViewSet","showModal","setShowModal","questionTimerId","setQuestionTimerId","internalTimer","setInternalTimer","user","setUser","attemptedQuestions","setAttemptedQuestions","incorrectAnswers","setIncorrectAnswers","onAuthStateChanged","game","window","location","href","split","pop","getExamData","quizRef","quizSnapshot","exists","quizData","data","console","log","questionIds","question","questionPromises","map","questionId","questionRef","questionSnapshot","id","Promise","all","fetchedQuestions","error","calculateResult","correctAnswers","wrongAnswers","forEach","index","correctOption","toString","push","perQueMarks","obtainedMarks","length","obtainedPercent","verdict","tempResult","correctAnswerIds","q","wrongAnswerIds","gameScoreRef","uid","gameScoreSnapshot","scoresToUpdate","scores","allGames","merge","initialDelay","setTimeout","timerId","setInterval","prevIndex","nextIndex","clearInterval","clearTimeout","timer","prev","handleAnswerSelection","option","isCorrect","Object","keys","handleEndGame","resetGame","totalMarks","defaultLostOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","defaultWinOptions","gameButton","display","justifyContent","margin","gap","textAlign","height","name","backgroundColor","borderRadius","width","padding","marginRight","options","sort","border","placeSelf"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\r\nimport { db, auth } from \"./firebase\";\r\nimport Modal from \"./Modal/modal\";\r\nimport styles from \"../components/games/games.module.css\";\r\nimport Lottie from 'react-lottie';\r\nimport lost from \"./games/lost.json\";\r\nimport win from \"./games/win.json\";\r\n\r\nfunction WriteExam({ onObtainedMarks, onModalVisibilityChange, gameScore, perQue }) {\r\n  const [examData, setExamData] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedQuestionIndex, setSelectedQuestionIndex] = useState(0);\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n  const [result, setResult] = useState({});\r\n  const [viewSet, setViewSet] = useState(\"\");\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [questionTimerId, setQuestionTimerId] = useState(null);\r\n  const [internalTimer, setInternalTimer] = useState(5);\r\n\r\n  const [user, setUser] = useState();\r\n  const [attemptedQuestions, setAttemptedQuestions] = useState(0);\r\n  const [incorrectAnswers, setIncorrectAnswers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n    });\r\n  }, []);\r\n\r\n  const game = window.location.href.split('/').pop();\r\n\r\n  useEffect(() => {\r\n    const getExamData = async () => {\r\n      try {\r\n        const quizRef = doc(db, \"Quizzes\", game);\r\n        const quizSnapshot = await getDoc(quizRef);\r\n\r\n        if (quizSnapshot.exists()) {\r\n          const quizData = quizSnapshot.data();\r\n          setExamData(quizData);\r\n          console.log(quizData);\r\n\r\n          const questionIds = quizData.question;\r\n          const questionPromises = questionIds.map(async (questionId) => {\r\n            const questionRef = doc(db, \"Questions\", questionId);\r\n            const questionSnapshot = await getDoc(questionRef);\r\n            return { ...questionSnapshot.data(), id: questionSnapshot.id };\r\n          });\r\n\r\n          const fetchedQuestions = await Promise.all(questionPromises);\r\n          console.log(fetchedQuestions);\r\n          setQuestions(fetchedQuestions);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching exam data:\", error);\r\n      }\r\n    };\r\n\r\n    getExamData();\r\n  }, []);\r\n\r\n  const calculateResult = async () => {\r\n    let correctAnswers = [];\r\n    let wrongAnswers = [];\r\n\r\n    questions.forEach((question, index) => {\r\n      if (question.correctOption.toString() === selectedOptions[index]) {\r\n        correctAnswers.push(question);\r\n      } else {\r\n        wrongAnswers.push(question);\r\n      }\r\n    });\r\n\r\n    const perQueMarks = 1;\r\n    const obtainedMarks = correctAnswers.length * perQueMarks;\r\n    const obtainedPercent = (obtainedMarks / questions.length) * 100;\r\n\r\n    let verdict = \"Pass\";\r\n    if (obtainedMarks <= 0) {\r\n      verdict = \"Fail\";\r\n    }\r\n    if (obtainedMarks === questions.length && obtainedMarks !== 0) {\r\n      verdict = \"Won\";\r\n    }\r\n\r\n    const tempResult = {\r\n      correctAnswers,\r\n      wrongAnswers,\r\n      obtainedMarks,\r\n      obtainedPercent,\r\n      verdict,\r\n      attemptedQuestions,\r\n    };\r\n\r\n    if (onObtainedMarks) {\r\n      onObtainedMarks(obtainedMarks);\r\n    }\r\n\r\n    if (user) {\r\n      const correctAnswerIds = correctAnswers.map((q) => q.id);\r\n      const wrongAnswerIds = wrongAnswers.map((q) => q.id);\r\n\r\n      const gameScoreRef = doc(db, \"GameReports\", user.uid);\r\n      const gameScoreSnapshot = await getDoc(gameScoreRef);\r\n\r\n      let scoresToUpdate = {};\r\n\r\n      if (gameScoreSnapshot.exists()) {\r\n        scoresToUpdate = gameScoreSnapshot.data().scores || {};\r\n      } else {\r\n        // Initialize scores for all games to 0 if the document doesn't exist\r\n        const allGames = [\"2048-game\", \"bricks-mania\", \"slidding-puzzle\", \"tic-tac-toe\"];\r\n        allGames.forEach((game) => {\r\n          scoresToUpdate[game] = 0;\r\n        });\r\n      }\r\n\r\n      // Update the score only if it's greater than the existing score\r\n      if (gameScore > scoresToUpdate[game]) {\r\n        scoresToUpdate[game] = gameScore;\r\n      }\r\n\r\n      try {\r\n        await setDoc(gameScoreRef, {\r\n          user: user.uid,\r\n          scores: {\r\n            ...scoresToUpdate,\r\n          },\r\n        }, { merge: true });\r\n\r\n        console.log(\"Report saved successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error saving report: \", error);\r\n      }\r\n    } else {\r\n      console.error(\"No user signed in or quiz ID missing\");\r\n    }\r\n\r\n    setResult(tempResult);\r\n    setViewSet(\"result\");\r\n    setShowModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (viewSet !== \"result\" && viewSet !== \"review\") {\r\n      const initialDelay = setTimeout(() => {\r\n        setShowModal(true);\r\n        if (onModalVisibilityChange) {\r\n          onModalVisibilityChange(true);\r\n        }\r\n        setSelectedQuestionIndex(0);\r\n\r\n        const timerId = setInterval(() => {\r\n          setSelectedQuestionIndex((prevIndex) => {\r\n            const nextIndex = prevIndex + 1;\r\n            if (nextIndex < questions.length) {\r\n              setShowModal(true);\r\n              if (onModalVisibilityChange) {\r\n                onModalVisibilityChange(true);\r\n              }\r\n              return nextIndex;\r\n            } else {\r\n              clearInterval(timerId);\r\n              return prevIndex;\r\n            }\r\n          });\r\n        }, 15000);\r\n\r\n        setQuestionTimerId(timerId);\r\n      }, 10000);\r\n\r\n      return () => {\r\n        clearTimeout(initialDelay);\r\n        clearInterval(questionTimerId);\r\n      };\r\n    }\r\n  }, [viewSet, questions.length]);\r\n\r\n  useEffect(() => {\r\n    if (showModal && internalTimer > 0 && viewSet !== \"result\" && viewSet !== \"result\") {\r\n      const timer = setTimeout(() => {\r\n        setInternalTimer((prev) => prev - 1);\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(timer);\r\n    } else if (internalTimer === 0) {\r\n      setShowModal(false);\r\n      if (onModalVisibilityChange) {\r\n        onModalVisibilityChange(false);\r\n      }\r\n      setInternalTimer(5);\r\n    }\r\n  }, [showModal, internalTimer]);\r\n\r\n  const handleAnswerSelection = (option) => {\r\n    const isCorrect = questions[selectedQuestionIndex].correctOption.toString() === option;\r\n\r\n    setSelectedOptions({\r\n      ...selectedOptions,\r\n      [selectedQuestionIndex]: option,\r\n    });\r\n\r\n    if (!isCorrect) {\r\n      setIncorrectAnswers((prev) => prev + 1);\r\n    }\r\n\r\n    setAttemptedQuestions(Object.keys(selectedOptions).length + 1);\r\n    setShowModal(false);\r\n    if (onModalVisibilityChange) {\r\n      onModalVisibilityChange(false);\r\n    }\r\n    setInternalTimer(5);\r\n\r\n    if (!isCorrect && incorrectAnswers + 1 >= 2) {\r\n      handleEndGame();\r\n    }\r\n  };\r\n\r\n  const handleEndGame = () => {\r\n    if (onModalVisibilityChange) {\r\n      onModalVisibilityChange(true);\r\n    }\r\n    clearInterval(questionTimerId);\r\n    calculateResult();\r\n    setViewSet(\"result\");\r\n    setTimeout(() => {\r\n      setShowModal(false);\r\n      window.location.href = \"/#/home\";\r\n    }, 15000);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    window.location.href = window.location.href;\r\n  };\r\n\r\n  const totalMarks = attemptedQuestions * perQue;\r\n\r\n  const defaultLostOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: lost,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  };\r\n  const defaultWinOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: win,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className={styles.gameButton} style={{ display: \"flex\" }} onClick={handleEndGame}>End Game</button>\r\n      <Modal isOpen={showModal} onClose={() => { if (viewSet === \"result\") { window.location.href = \"./home\"; } setShowModal(false); if (onModalVisibilityChange) { onModalVisibilityChange(false); } }} header={viewSet === \"result\" ? \"Result\" : viewSet === \"review\" ? \"Review\" : \"Question\"} size=\"xlarge\">\r\n        {viewSet === \"result\" ? (\r\n          <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"3vh 1vw\" }}>\r\n            <div>\r\n              <div>\r\n                <h4>Total Questions: {questions.length}</h4>\r\n                <h4>Attempted Questions: {attemptedQuestions}</h4>\r\n                <h4>Correct Answers: {result.obtainedMarks}</h4>\r\n                <h4>Game Score: {gameScore}</h4>\r\n                <div style={{ display: \"flex\", gap: \"2vw\", justifyContent: 'center' }}>\r\n                  <button className={styles.gameButton} onClick={resetGame}>Retake Exam</button>\r\n                  <button className={styles.gameButton} onClick={() => { window.location.href = \"./home\"; }}>End Game</button>\r\n                  {/* <button className={styles.gameButton} onClick={() => setViewSet(\"review\")}>Review Answers</button> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {result.verdict === \"Won\" && (\r\n                <Lottie options={defaultWinOptions}\r\n                  height={300}\r\n                  width={300}\r\n                />\r\n              )}\r\n              {result.verdict === \"Fail\" && (\r\n                <Lottie options={defaultLostOptions}\r\n                  height={300}\r\n                  width={300}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) :\r\n          // viewSet === \"review\" ? (\r\n          //   <div>\r\n          //     <div style={{ display: \"grid\", gap: \"2vh\", maxHeight: \"50vh\", overflow: \"auto\", msOverflowStyle: \"none\", scrollbarWidth: \"none\" }}>\r\n          //       {questions.map((question, index) => {\r\n          //         const isCorrect = question.correctOption.toString() === selectedOptions[index];\r\n          //         return (\r\n          //           <div key={index}>\r\n          //             <h1>{index + 1}: {question.name}</h1>\r\n          //             <h1>Submitted Answer: {selectedOptions[index]}</h1>\r\n          //             <h1>Correct Answer: {question.correctOption}</h1>\r\n          //           </div>\r\n          //         );\r\n          //       })}\r\n          //     </div>\r\n          //     <div style={{ display: \"flex\", placeContent: \"center\", gap: \"2vw\" }}>\r\n          //       <button className={styles.gameButton} onClick={resetGame}>Retake Exam</button>\r\n          //       <button className={styles.gameButton} onClick={() => { setShowModal(false); if (onModalVisibilityChange){onModalVisibilityChange(false);} }}>Resume Game</button>\r\n          //     </div>\r\n          //   </div>\r\n          // ) : \r\n          (\r\n            questions[selectedQuestionIndex] && (\r\n              <div style={{ display: \"grid\", textAlign: \"start\" }}>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", height: \"min-content\" }}>\r\n                  <h4 style={{ margin: \"0vh 3vw\" }}>{selectedQuestionIndex + 1}: {questions[selectedQuestionIndex]?.name}</h4>\r\n                  <h4 style={{ backgroundColor: \"#FFC340\", borderRadius: \"50%\", width: \"2.5vw\", height: \"2.5vw\", textAlign: \"center\", padding: \"0.5vh\", marginRight: \"2vw\" }}>{internalTimer}</h4>\r\n                </div>\r\n                <br />\r\n                <div style={{ display: \"grid\", gap: \"2vh\" }}>\r\n                  {Object.keys(questions[selectedQuestionIndex]?.options).sort().map((option) => (\r\n                    <div\r\n                      style={{\r\n                        border: \"3px solid #ac7474\",\r\n                        borderRadius: \"40px\",\r\n                        margin: \"0vh 2vw\",\r\n                        backgroundColor: selectedOptions[selectedQuestionIndex] === option ? \"#BE60D0\" : \"transparent\"\r\n                      }}\r\n                      key={option}\r\n                      onClick={() => handleAnswerSelection(option)}\r\n                    >\r\n                      <h4 style={{ margin: \"2vh 2vw\" }}>{option}: {questions[selectedQuestionIndex]?.options[option]}</h4>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <button style={{ placeSelf: \"end\", margin: \"1vh 2vw 0vh 2vw\" }} className={styles.gameButton} onClick={handleEndGame}>End Game</button>\r\n              </div>\r\n            )\r\n          )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WriteExam;"]},"metadata":{},"sourceType":"module"}