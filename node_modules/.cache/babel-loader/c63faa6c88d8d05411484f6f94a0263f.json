{"ast":null,"code":"import _toConsumableArray from\"C:/Users/dell/Documents/GitHub/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/dell/Documents/GitHub/test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useCallback,useRef}from\"react\";import styles from\"./games.module.css\";import LoginHeader from\"../header/LoginHeader\";import{toast}from\"react-toastify\";import animationData from\"./animation.json\";import Lottie from'react-lottie';import WriteExam from\"../Quiz\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Game2048(){var defaultOptions={loop:true,autoplay:true,animationData:animationData,rendererSettings:{preserveAspectRatio:'xMidYMid slice'}};var _useState=useState(Array.from({length:4},function(){return Array.from({length:4},function(){return 0;});})),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),score=_useState4[0],setScore=_useState4[1];var gameOverRef=useRef(false);var checkGameOver=useCallback(function(){for(var i=0;i<board.length;i++){for(var j=0;j<board[i].length;j++){if(board[i][j]===0){return false;}}}for(var _i=0;_i<board.length;_i++){for(var _j=0;_j<board[_i].length;_j++){if(_i<board.length-1&&board[_i][_j]===board[_i+1][_j]||_j<board[_i].length-1&&board[_i][_j]===board[_i][_j+1]){return false;}}}return true;},[board]);// const checkGameOver = () => {\n//   // Check for available moves\n//   for (let i = 0; i < board.length; i++) {\n//     for (let j = 0; j < board[i].length; j++) {\n//       if (board[i][j] === null) {\n//         return false; // If any cell is empty, game is not over\n//       }\n//       // Check adjacent cells (left, right, up, down)\n//       if (i > 0 && board[i][j] === board[i - 1][j]) {\n//         return false;\n//       }\n//       if (i < board.length - 1 && board[i][j] === board[i + 1][j]) {\n//         return false;\n//       }\n//       if (j > 0 && board[i][j] === board[i][j - 1]) {\n//         return false;\n//       }\n//       if (j < board[i].length - 1 && board[i][j] === board[i][j + 1]) {\n//         return false;\n//       }\n//     }\n//   }\n//   return true; // No available moves left, game over\n// };\nuseEffect(function(){if(checkGameOver()){gameOverRef.current=true;}},[board]);var restartGame=function restartGame(){setBoard(Array.from({length:4},function(){return Array.from({length:4},function(){return null;});}));setScore(0);generateRandomTile();generateRandomTile();gameOverRef.current=false;};var generateRandomTile=useCallback(function(){var emptyTiles=[];for(var i=0;i<board.length;i++){for(var j=0;j<board[i].length;j++){if(board[i][j]===0){emptyTiles.push({x:i,y:j});}}}if(emptyTiles.length===0){// setGameOver(true);\ngameOverRef.current=true;// Update gameOver using useRef\nreturn;}var randomIndex=Math.floor(Math.random()*emptyTiles.length);var newValue=Math.random()<0.9?2:4;var _emptyTiles$randomInd=emptyTiles[randomIndex],x=_emptyTiles$randomInd.x,y=_emptyTiles$randomInd.y;setBoard(function(prevBoard){var newBoard=_toConsumableArray(prevBoard);newBoard[x][y]=newValue;return newBoard;});// setGameOver(checkGameOver());\ngameOverRef.current=checkGameOver();// Update gameOver using useRef\n},[board,checkGameOver]);var handleKeyDown=useCallback(function(e){// if (!gameOver) {\nif(!gameOverRef.current){var _ret=function(){e.preventDefault();var moved=false;var newBoard=_toConsumableArray(board);switch(e.key){case\"ArrowUp\":var _loop=function _loop(j){for(var i=1;i<newBoard.length;i++){if(newBoard[i][j]!==0){(function(){var k=i-1;while(k>=0&&newBoard[k][j]===0){k--;}if(k>=0&&newBoard[k][j]===newBoard[i][j]){newBoard[k][j]*=2;setScore(function(prevScore){return prevScore+newBoard[k][j];});newBoard[i][j]=0;moved=true;}else if(k+1!==i){newBoard[k+1][j]=newBoard[i][j];newBoard[i][j]=0;moved=true;}})();}}};for(var j=0;j<newBoard.length;j++){_loop(j);}break;case\"ArrowDown\":var _loop2=function _loop2(_j2){for(var i=newBoard.length-2;i>=0;i--){if(newBoard[i][_j2]!==0){(function(){var k=i+1;while(k<newBoard.length&&newBoard[k][_j2]===0){k++;}if(k<newBoard.length&&newBoard[k][_j2]===newBoard[i][_j2]){newBoard[k][_j2]*=2;setScore(function(prevScore){return prevScore+newBoard[k][_j2];});newBoard[i][_j2]=0;moved=true;}else if(k-1!==i){newBoard[k-1][_j2]=newBoard[i][_j2];newBoard[i][_j2]=0;moved=true;}})();}}};for(var _j2=0;_j2<newBoard.length;_j2++){_loop2(_j2);}break;case\"ArrowLeft\":var _loop3=function _loop3(i){for(var _j3=1;_j3<newBoard[i].length;_j3++){if(newBoard[i][_j3]!==0){(function(){var k=_j3-1;while(k>=0&&newBoard[i][k]===0){k--;}if(k>=0&&newBoard[i][k]===newBoard[i][_j3]){newBoard[i][k]*=2;setScore(function(prevScore){return prevScore+newBoard[i][k];});newBoard[i][_j3]=0;moved=true;}else if(k+1!==_j3){newBoard[i][k+1]=newBoard[i][_j3];newBoard[i][_j3]=0;moved=true;}})();}}};for(var i=0;i<newBoard.length;i++){_loop3(i);}break;case\"ArrowRight\":var _loop4=function _loop4(_i2){for(var _j4=newBoard[_i2].length-2;_j4>=0;_j4--){if(newBoard[_i2][_j4]!==0){(function(){var k=_j4+1;while(k<newBoard[_i2].length&&newBoard[_i2][k]===0){k++;}if(k<newBoard[_i2].length&&newBoard[_i2][k]===newBoard[_i2][_j4]){newBoard[_i2][k]*=2;setScore(function(prevScore){return prevScore+newBoard[_i2][k];});newBoard[_i2][_j4]=0;moved=true;}else if(k-1!==_j4){newBoard[_i2][k-1]=newBoard[_i2][_j4];newBoard[_i2][_j4]=0;moved=true;}})();}}};for(var _i2=0;_i2<newBoard.length;_i2++){_loop4(_i2);}break;default:return{v:void 0};}if(moved){setBoard(newBoard);generateRandomTile();// setGameOver(checkGameOver());\ngameOverRef.current=checkGameOver();// Update gameOver using useRef\nif(gameOverRef.current){toast.error(\"Game Over! Final Score: \".concat(score),{position:\"top-center\"});}}}();if(typeof _ret===\"object\")return _ret.v;}},[board,checkGameOver,generateRandomTile,score]);useEffect(function(){generateRandomTile();generateRandomTile();},[]);var redirectMain=function redirectMain(){window.location.href=\"/#/home\";};useEffect(function(){document.addEventListener(\"keydown\",handleKeyDown);return function(){document.removeEventListener(\"keydown\",handleKeyDown);};},[handleKeyDown]);var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),obtainedMarks=_useState6[0],setObtainedMarks=_useState6[1];var handleObtainedMarks=function handleObtainedMarks(marks){setObtainedMarks(marks);};var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),gameScore=_useState8[0],setGameScore=_useState8[1];useEffect(function(){setGameScore(score+0);},[score,obtainedMarks]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.mainDiv,children:[/*#__PURE__*/_jsx(LoginHeader,{height:3}),/*#__PURE__*/_jsx(\"div\",{style:{margin:\"0vh 5vw\"},children:/*#__PURE__*/_jsx(WriteExam,{onObtainedMarks:handleObtainedMarks,gameScore:gameScore,perQue:5})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.innerGrid,style:{gridTemplateColumns:\"1fr 1fr\"},children:[/*#__PURE__*/_jsx(\"div\",{className:styles['game2048-container'],children:/*#__PURE__*/_jsx(\"div\",{className:styles.inSections,children:!checkGameOver()?/*#__PURE__*/_jsx(\"div\",{className:styles[\"game-board\"],children:board.map(function(row,rowIndex){return/*#__PURE__*/_jsx(\"div\",{className:styles[\"board-row\"],children:row.map(function(cell,colIndex){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles['board-cell'],\" \").concat(styles[\"value-\".concat(cell!==0?cell:'empty')]),children:cell!==0?cell:\"\"},\"\".concat(rowIndex,\"-\").concat(colIndex));})},rowIndex);})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"8vh\"},children:\"Game Over!\"}),/*#__PURE__*/_jsx(Lottie,{options:defaultOptions,height:300,width:300})]})})}),/*#__PURE__*/_jsx(\"div\",{className:styles.inRightSections,children:/*#__PURE__*/_jsxs(\"div\",{className:styles[\"right-board\"],children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Score\"}),/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"12vh\"},children:score}),gameOverRef.current&&/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"8vh\"},children:\"Game Over!\"}),/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"4vh\"},children:\"Click Here to Restart\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",gap:\"1vw\"},children:[/*#__PURE__*/_jsx(\"button\",{style:{placeSelf:\"center\",width:\"70%\"},className:styles.gameButton,onClick:restartGame,children:\"Restart\"}),/*#__PURE__*/_jsx(\"button\",{style:{placeSelf:\"center\",width:\"70%\"},className:styles.gameButton,onClick:redirectMain,children:\"Go Back\"})]})]})})]})]});}","map":{"version":3,"sources":["C:/Users/dell/Documents/GitHub/test/src/components/games/game2048.js"],"names":["React","useState","useEffect","useCallback","useRef","styles","LoginHeader","toast","animationData","Lottie","WriteExam","Game2048","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","Array","from","length","board","setBoard","score","setScore","gameOverRef","checkGameOver","i","j","current","restartGame","generateRandomTile","emptyTiles","push","x","y","randomIndex","Math","floor","random","newValue","prevBoard","newBoard","handleKeyDown","e","preventDefault","moved","key","k","prevScore","error","position","redirectMain","window","location","href","document","addEventListener","removeEventListener","obtainedMarks","setObtainedMarks","handleObtainedMarks","marks","gameScore","setGameScore","mainDiv","margin","innerGrid","gridTemplateColumns","inSections","map","row","rowIndex","cell","colIndex","fontSize","inRightSections","display","gap","placeSelf","width","gameButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport styles from \"./games.module.css\";\r\nimport LoginHeader from \"../header/LoginHeader\";\r\nimport { toast } from \"react-toastify\";\r\nimport animationData from \"./animation.json\";\r\nimport Lottie from 'react-lottie';\r\nimport WriteExam from \"../Quiz\";\r\n\r\n\r\nexport default function Game2048() {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  };\r\n  const [board, setBoard] = useState(\r\n    Array.from({ length: 4 }, () => Array.from({ length: 4 }, () => 0))\r\n  );\r\n  const [score, setScore] = useState(0);\r\n const gameOverRef = useRef(false);\r\n  const checkGameOver = useCallback(() => {\r\n    for (let i = 0; i < board.length; i++) {\r\n      for (let j = 0; j < board[i].length; j++) {\r\n        if (board[i][j] === 0) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < board.length; i++) {\r\n      for (let j = 0; j < board[i].length; j++) {\r\n        if (\r\n          (i < board.length - 1 && board[i][j] === board[i + 1][j]) ||\r\n          (j < board[i].length - 1 && board[i][j] === board[i][j + 1])\r\n        ) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }, [board]);\r\n\r\n  \r\n  // const checkGameOver = () => {\r\n  //   // Check for available moves\r\n  //   for (let i = 0; i < board.length; i++) {\r\n  //     for (let j = 0; j < board[i].length; j++) {\r\n  //       if (board[i][j] === null) {\r\n  //         return false; // If any cell is empty, game is not over\r\n  //       }\r\n  //       // Check adjacent cells (left, right, up, down)\r\n  //       if (i > 0 && board[i][j] === board[i - 1][j]) {\r\n  //         return false;\r\n  //       }\r\n  //       if (i < board.length - 1 && board[i][j] === board[i + 1][j]) {\r\n  //         return false;\r\n  //       }\r\n  //       if (j > 0 && board[i][j] === board[i][j - 1]) {\r\n  //         return false;\r\n  //       }\r\n  //       if (j < board[i].length - 1 && board[i][j] === board[i][j + 1]) {\r\n  //         return false;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return true; // No available moves left, game over\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (checkGameOver()) {\r\n      gameOverRef.current = true;     \r\n    }\r\n  }, [board]);\r\n\r\n  \r\n\r\n  const restartGame = () => {\r\n    setBoard(Array.from({ length: 4 }, () => Array.from({ length: 4 }, () => null)));\r\n    setScore(0);\r\n    generateRandomTile();\r\n    generateRandomTile();\r\n    gameOverRef.current = false; \r\n  };  \r\n\r\n  const generateRandomTile = useCallback(() => {\r\n    let emptyTiles = [];\r\n    for (let i = 0; i < board.length; i++) {\r\n      for (let j = 0; j < board[i].length; j++) {\r\n        if (board[i][j] === 0) {\r\n          emptyTiles.push({ x: i, y: j });\r\n        }\r\n      }\r\n    }\r\n    if (emptyTiles.length === 0) {\r\n      // setGameOver(true);\r\n      gameOverRef.current = true; // Update gameOver using useRef\r\n      return;\r\n    }\r\n    const randomIndex = Math.floor(Math.random() * emptyTiles.length);\r\n    const newValue = Math.random() < 0.9 ? 2 : 4;\r\n    const { x, y } = emptyTiles[randomIndex];\r\n    setBoard((prevBoard) => {\r\n      const newBoard = [...prevBoard];\r\n      newBoard[x][y] = newValue;\r\n      return newBoard;\r\n    });\r\n    // setGameOver(checkGameOver());\r\n    gameOverRef.current = checkGameOver(); // Update gameOver using useRef\r\n  }, [board, checkGameOver]);\r\n\r\n\r\n\r\n  const handleKeyDown = useCallback(\r\n    (e) => {\r\n      // if (!gameOver) {\r\n      if (!gameOverRef.current) {\r\n        e.preventDefault();\r\n        let moved = false;\r\n        const newBoard = [...board];\r\n        \r\n\r\n        switch (e.key) {\r\n          case \"ArrowUp\":\r\n            for (let j = 0; j < newBoard.length; j++) {\r\n              for (let i = 1; i < newBoard.length; i++) {\r\n                if (newBoard[i][j] !== 0) {\r\n                  let k = i - 1;\r\n                  while (k >= 0 && newBoard[k][j] === 0) {\r\n                    k--;\r\n                  }\r\n                  if (k >= 0 && newBoard[k][j] === newBoard[i][j]) {\r\n                    newBoard[k][j] *= 2;\r\n                    setScore((prevScore) => prevScore + newBoard[k][j]);\r\n                    newBoard[i][j] = 0;\r\n                    moved = true;\r\n                  } else if (k + 1 !== i) {\r\n                    newBoard[k + 1][j] = newBoard[i][j];\r\n                    newBoard[i][j] = 0;\r\n                    moved = true;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          case \"ArrowDown\":\r\n            for (let j = 0; j < newBoard.length; j++) {\r\n              for (let i = newBoard.length - 2; i >= 0; i--) {\r\n                if (newBoard[i][j] !== 0) {\r\n                  let k = i + 1;\r\n                  while (k < newBoard.length && newBoard[k][j] === 0) {\r\n                    k++;\r\n                  }\r\n                  if (\r\n                    k < newBoard.length &&\r\n                    newBoard[k][j] === newBoard[i][j]\r\n                  ) {\r\n                    newBoard[k][j] *= 2;\r\n                    setScore((prevScore) => prevScore + newBoard[k][j]);\r\n                    newBoard[i][j] = 0;\r\n                    moved = true;\r\n                  } else if (k - 1 !== i) {\r\n                    newBoard[k - 1][j] = newBoard[i][j];\r\n                    newBoard[i][j] = 0;\r\n                    moved = true;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          case \"ArrowLeft\":\r\n            for (let i = 0; i < newBoard.length; i++) {\r\n              for (let j = 1; j < newBoard[i].length; j++) {\r\n                if (newBoard[i][j] !== 0) {\r\n                  let k = j - 1;\r\n                  while (k >= 0 && newBoard[i][k] === 0) {\r\n                    k--;\r\n                  }\r\n                  if (k >= 0 && newBoard[i][k] === newBoard[i][j]) {\r\n                    newBoard[i][k] *= 2;\r\n                    setScore((prevScore) => prevScore + newBoard[i][k]);\r\n                    newBoard[i][j] = 0;\r\n                    moved = true;\r\n                  } else if (k + 1 !== j) {\r\n                    newBoard[i][k + 1] = newBoard[i][j];\r\n                    newBoard[i][j] = 0;\r\n                    moved = true;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          case \"ArrowRight\":\r\n            for (let i = 0; i < newBoard.length; i++) {\r\n              for (let j = newBoard[i].length - 2; j >= 0; j--) {\r\n                if (newBoard[i][j] !== 0) {\r\n                  let k = j + 1;\r\n                  while (k < newBoard[i].length && newBoard[i][k] === 0) {\r\n                    k++;\r\n                  }\r\n                  if (\r\n                    k < newBoard[i].length &&\r\n                    newBoard[i][k] === newBoard[i][j]\r\n                  ) {\r\n                    newBoard[i][k] *= 2;\r\n                    setScore((prevScore) => prevScore + newBoard[i][k]);\r\n                    newBoard[i][j] = 0;\r\n                    moved = true;\r\n                  } else if (k - 1 !== j) {\r\n                    newBoard[i][k - 1] = newBoard[i][j];\r\n                    newBoard[i][j] = 0;\r\n                    moved = true;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n\r\n        if (moved) {\r\n          setBoard(newBoard);\r\n          generateRandomTile();\r\n          // setGameOver(checkGameOver());\r\n          gameOverRef.current = checkGameOver(); // Update gameOver using useRef\r\n          if (gameOverRef.current) {\r\n            toast.error(`Game Over! Final Score: ${score}`,{\r\n              position: \"top-center\",\r\n          });\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [board, checkGameOver, generateRandomTile, score]\r\n  );\r\n\r\n  useEffect(() => {\r\n    generateRandomTile();\r\n    generateRandomTile();\r\n  }, []);\r\n\r\n  const redirectMain = () => {\r\n    window.location.href = \"/#/home\";\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [handleKeyDown]);\r\n\r\n  const [obtainedMarks, setObtainedMarks] = useState(0);\r\n\r\n  const handleObtainedMarks = (marks) => {\r\n    setObtainedMarks(marks);\r\n  };\r\n\r\n  const [gameScore, setGameScore] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setGameScore(score + 0);\r\n  }, [score, obtainedMarks]);\r\n\r\n  return (\r\n    <div className={styles.mainDiv}>\r\n      <LoginHeader height ={3} />\r\n        <div style={{margin:\"0vh 5vw\"}}>\r\n          <WriteExam onObtainedMarks={handleObtainedMarks} gameScore={gameScore} perQue={5} />\r\n        </div>\r\n      <div className={styles.innerGrid} style={{ gridTemplateColumns: \"1fr 1fr\" }}>\r\n        <div className={styles['game2048-container']}>\r\n          <div className={styles.inSections}>\r\n            {!checkGameOver() ? (\r\n            <div className={styles[\"game-board\"]}>\r\n              {board.map((row, rowIndex) => (\r\n                <div key={rowIndex} className={styles[\"board-row\"]}>\r\n                  {row.map((cell, colIndex) => (\r\n                    <div\r\n                      key={`${rowIndex}-${colIndex}`}\r\n                      className={`${styles['board-cell']} ${styles[`value-${cell !== 0 ? cell : 'empty'}`]}`}\r\n                    >\r\n                      {cell !== 0 ? cell : \"\"}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            ) : (<><h1 style={{fontSize:\"8vh\"}}>Game Over!</h1>\r\n             <Lottie options={defaultOptions}\r\n              height={300}\r\n              width={300}\r\n      />\r\n\r\n              </>)}\r\n          </div>\r\n        </div>\r\n        <div className={styles.inRightSections}>\r\n          <div className={styles[\"right-board\"]}>\r\n          <div>\r\n            <h1 >Score</h1>\r\n            <h1 style={{fontSize:\"12vh\"}}>{score}</h1>\r\n\r\n            {gameOverRef.current && <div> <h1 style={{fontSize:\"8vh\"}}>Game Over!</h1>\r\n            <h1 style={{fontSize:\"4vh\"}}>Click Here to Restart</h1></div>}\r\n          </div>\r\n          <div style={{display:\"flex\", gap:\"1vw\"}}>\r\n          <button style={{ placeSelf: \"center\", width:\"70%\"}} className={styles.gameButton} onClick={restartGame}>\r\n              Restart\r\n            </button>\r\n          <button style={{ placeSelf: \"center\", width:\"70%\"}} className={styles.gameButton} onClick={redirectMain}>\r\n              Go Back\r\n            </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}